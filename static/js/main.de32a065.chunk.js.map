{"version":3,"sources":["utils/audio/home_opening.mp3","components/Home.js","actions/actionTypes.js","apis/pokeapi.js","actions/index.js","components/Card.js","components/PokemonList.js","components/Bag.js","components/SearchBar.js","utils/audio/palettetown_pokedex.mp3","components/Pokedex.js","utils/audio/pokecenter_pokedex.mp3","components/PokemonDetails.js","components/BattleCard.js","components/Battle.js","App.js","reducers/index.js","reducers/pokemonListReducer.js","reducers/pokemonReducer.js","reducers/bagReducer.js","reducers/opponentBagReducer.js","index.js"],"names":["Home","className","Container","src","width","height","classname","type","to","url","home_opening","playStatus","Sound","status","PLAYING","playFromPosition","loop","FETCH_POKEMONS","FETCH_POKEMON","UPDATE_BAG","FETCH_OPPONENT_BAG","axios","create","baseURL","fetchPokemon","id","dispatch","a","pokeapi","get","response","actionTypes","payload","data","updateBag","Card","pokemon","showDetails","bag","isBag","changeHandler","console","log","length","name","sprites","front_default","alt","toUpperCase","includes","onClick","disabled","PokemonList","props","pokemons","nameFilter","typeFilter","maxBaseExperienceFilter","filter","nameFilterPokemon","toLowerCase","typeFilterPokemon","len","types","i","maxBaseExperienceFilterPokemon","base_experience","map","class","Bag","SearchBar","setFilterPokemon","useState","inputValue","setInputValue","placeholder","value","onChange","event","newValue","target","trim","handleChange","Pokedex","state","filterPokemon","filterString","setState","this","fetchPokemons","htmlFor","min","max","palettetown","Component","connect","pokemenDetailsArray","Array","from","keys","promises","pokeIndex","Promise","all","responses","PokemonDetails","match","params","pokemonId","pokecenter","style","weight","parseInt","BattleCard","currentHealth","totalHealth","attack","reverse","health","flexDirection","display","gap","moves","slice","move","attackHandler","alignItems","back_default","ProgressBar","now","Battle","activePokemonIndex","userHealth","userMaxHealth","activeOpponentPokemonIndex","opponentHealth","opponentMaxHealth","isModalOpen","modalTitle","modalText","opponentCanAttack","isGameOver","opponentBagSize","Math","ceil","floor","random","opponentBagArray","fetchOpponentBag","opponentBag","opponentPokemon","getData","res","userMove","then","newOpponentHealthArray","power","nextIndex","catch","err","Modal","Dialog","Body","Title","alignSelf","Button","moveIndex","attackMove","newHealthArray","opponentAttack","variant","App","path","exact","component","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de32a065.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home_opening.82d86eb5.mp3\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Sound from 'react-sound';\r\nimport home_opening from '../utils/audio/home_opening.mp3';\r\nimport { Container, Modal, Button } from 'react-bootstrap';\r\n\r\nimport \"./Home.css\"\r\n\r\nconst Home = () => {\r\n    return (\r\n            <div className=\"home\">\r\n                <Container className=\"home-container\">\r\n                    <h1 className=\"welcome-banner\"><img src=\"pokemon5.png\" width=\"550\" height=\"100\"/></h1>\r\n                    <p className= \"main-text\"> {`\r\n                     Welcome to the world of Pokémon! This world is inhabited by creatures called Pokémon! \r\n                     For some people, Pokémon are pets. Others use them for fights. \r\n                     Your very own Pokémon adventure is about to unfold! \r\n                     A world of dreams and adventures with Pokémon awaits!\r\n                     `}</p>\r\n                    <div classname=\"buttondiv\">\r\n                    <button type=\"button\" className=\"pokedexButton  btn btn-primary btn-lg\"><Link className=\"btn-primary-link\" to={\"/pokedex\"}>Pokédex</Link></button>\r\n                    </div>\r\n                    <Sound \r\n                        url={home_opening}\r\n                        playStatus={Sound.status.PLAYING}\r\n                        playFromPosition={300}\r\n                        loop={true}\r\n                    />\r\n                </Container>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Home;","export const FETCH_POKEMONS = 'FETCH_POKEMONS';\r\nexport const FETCH_POKEMON = 'FETCH_POKEMON';\r\nexport const UPDATE_BAG = 'UPDATE_BAG';\r\nexport const FETCH_OPPONENT_BAG = 'FETCH_OPPONENT_BAG';\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://pokeapi.co/api/v2/pokemon'\r\n});\r\n","import * as actionTypes from './actionTypes';\r\nimport pokeapi from '../apis/pokeapi';\r\n\r\nexport const fetchPokemons = () => async dispatch => {\r\n    const pokemenDetailsArray = Array.from(Array(151).keys())\r\n\r\n    const promises = pokemenDetailsArray.map((id) => {\r\n        const pokeIndex = id + 1;\r\n        return pokeapi.get('/' + pokeIndex)\r\n    })\r\n \r\n    const responses = await Promise.all(promises)\r\n\r\n    dispatch({\r\n        type: actionTypes.FETCH_POKEMONS,\r\n        payload: responses.map((response) => response.data)\r\n    })\r\n    \r\n};\r\n\r\nexport const fetchPokemon = (id) => async dispatch => {\r\n    const response = await pokeapi.get('/' + id);\r\n\r\n    dispatch({\r\n        type: actionTypes.FETCH_POKEMON,\r\n        payload: response.data\r\n    })\r\n};\r\n\r\nexport const updateBag = (id) => async dispatch => {\r\n    dispatch({\r\n        type: actionTypes.UPDATE_BAG,\r\n        payload: id\r\n    })\r\n};\r\n\r\nexport const fetchOpponentBag = (bag) => async dispatch => {\r\n    const pokemenDetailsArray = [...bag]\r\n\r\n    const promises = pokemenDetailsArray.map((id) => {\r\n        return pokeapi.get('/' + id)\r\n    })\r\n \r\n    const responses = await Promise.all(promises)\r\n\r\n    dispatch({\r\n        type: actionTypes.FETCH_OPPONENT_BAG,\r\n        payload: responses.map((response) => response.data)\r\n    })\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./card.css\"\r\n\r\nconst Card = ({ pokemon, showDetails, bag, isBag, updateBag }) => {\r\n    const changeHandler = () => {\r\n        updateBag(pokemon)\r\n    }\r\n\r\n    \r\n    console.log(bag.length > 5, \"cardbag\")\r\n    return (\r\n        <div className=\"card text-center\">\r\n            <div className=\"card -header\">{ pokemon.name }</div>\r\n            <div className=\"card -content\">\r\n                <img src={ pokemon.sprites.front_default } className=\"card-img-top\" alt={ pokemon.name.toUpperCase() } />\r\n            </div>\r\n            <div className=\"card -footer\">\r\n                {showDetails && <Link to={`/pokedex/${pokemon.id}`} className=\"btn btn-primary\">Details</Link>}\r\n                {bag.includes(pokemon) ? (\r\n                    <button className=\"btn btn-warning\" onClick={() => changeHandler()}>\r\n                        REMOVE\r\n                    </button> ) : (\r\n                    <button disabled={bag.length > 5} className=\"btn btn-success\" onClick={() => changeHandler()}>\r\n                        ADD\r\n                    </button>)\r\n                }    \r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport Card from './Card'\r\n\r\nconst PokemonList = (props) => {\r\n    const { pokemons, nameFilter, bag, updateBag, typeFilter, maxBaseExperienceFilter } = props;\r\n    return pokemons ? (\r\n        pokemons\r\n            .filter(nameFilterPokemon => nameFilterPokemon.name.includes(nameFilter.toLowerCase()))\r\n            .filter(typeFilterPokemon => {\r\n                const len = typeFilterPokemon.types.length\r\n                for (let i = 0; i < len; i++) {\r\n                    if (typeFilterPokemon.types[i].type.name.includes(typeFilter)) {\r\n                        return true\r\n                    }\r\n                }\r\n                return false\r\n            })\r\n            .filter(maxBaseExperienceFilterPokemon => maxBaseExperienceFilterPokemon.base_experience < maxBaseExperienceFilter)\r\n            .map((pokemon, i) => {\r\n                return (\r\n                    <>\r\n                        <div class=\"col-sm\">\r\n                            <Card\r\n                                showDetails\r\n                                key={pokemon.name}\r\n                                pokemon={ pokemon }\r\n                                bag={bag}\r\n                                updateBag={updateBag}\r\n                            />\r\n                        </div>\r\n                        \r\n                        {i%4 === 3 && <div class=\"w-100\"></div>}\r\n                    </>\r\n                );\r\n            })) : \"LOADING...\"\r\n};\r\n\r\nexport default PokemonList;\r\n","import React from 'react';\r\n\r\nimport Card from './Card'\r\nimport \"./bag.css\"\r\n\r\nconst Bag = ({ bag, updateBag }) => {\r\n    const renderList = () => {\r\n        return bag ? (\r\n            bag.map(pokemon => {\r\n                return (\r\n                    <Card\r\n                        showDetails\r\n                        isBag\r\n                        key={pokemon.name}\r\n                        pokemon={ pokemon }\r\n                        bag={bag}\r\n                        updateBag={updateBag}\r\n                    />\r\n                );\r\n            })) : \"LOADING...\"\r\n    }\r\n    \r\n    return (\r\n        <fieldset>\r\n            <legend>Battle Bag:</legend>\r\n            <div className=\"row\">\r\n                {renderList()}\r\n            </div>\r\n        </fieldset>\r\n    )\r\n};\r\n\r\nexport default Bag;\r\n","import React, { useState } from 'react';\r\n\r\nconst SearchBar = ({ setFilterPokemon }) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        const newValue = event.target.value.trim();\r\n\r\n        setFilterPokemon(newValue);\r\n        setInputValue(newValue);\r\n    }\r\n\r\n    return (\r\n        <input \r\n            type=\"text\"\r\n            placeholder=\"Search Pokemon\"\r\n            value={inputValue}\r\n            onChange={(event) => handleChange(event)}\r\n        />\r\n    )\r\n};\r\n\r\nexport default SearchBar;\r\n","export default __webpack_public_path__ + \"static/media/palettetown_pokedex.e8298f1e.mp3\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPokemons, updateBag } from '../actions';\r\n\r\nimport PokemonList from './PokemonList';\r\nimport Bag from './Bag';\r\nimport SearchBar from './SearchBar';\r\n\r\nimport Sound from 'react-sound';\r\nimport palettetown from '../utils/audio/palettetown_pokedex.mp3';\r\n\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport \"./Pokedex.css\"\r\n\r\nclass Pokedex extends Component {\r\n    state = {\r\n        nameFilter: '', \r\n        typeFilter: '',\r\n        maxBaseExperienceFilter: '300'\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if(this.props.pokemons.length === 0) {\r\n            this.props.fetchPokemons();\r\n        }\r\n    }\r\n\r\n    filterPokemon = (filterString) => {\r\n        this.setState({ nameFilter: filterString });\r\n    }\r\n\r\n    render() {\r\n        const { pokemons, bag, updateBag } = this.props;\r\n        const pokemonType = ['Grass', 'Fire', 'Water', 'Psychic', 'Normal', 'Electric', 'Ice', 'Fighting', 'Poison', 'Ground', 'Bug', 'Rock', 'Ghost', 'Dragon', 'Fairy']\r\n        console.log(\"pokemons\", pokemons)\r\n        console.log(\"bag\", bag)\r\n        console.log(\"move\", pokemons.name)\r\n        \r\n        \r\n        return (\r\n            <div className=\"p-3 mb-2 bg-light text-dark\" className=\"pokedex\">\r\n            <div className=\"container\">\r\n                <div classname=\"buttondiv\">\r\n                      <button type=\"button\" className=\"homeButton  btn btn-outline-dark btn-lg\"><Link className=\"btn-primary-link\" to={\"../\"}>Home</Link></button>\r\n            {bag.length > 0 && (<div>\r\n             <button  type=\"button\" className=\"battleButton  btn btn-outline-dark btn-lg\"><Link className=\"btn-primary-link\" to={\"/battle\"}>Battle</Link></button>\r\n              </div>)}   \r\n                </div>\r\n\r\n                <Bag \r\n                    bag={bag}\r\n                    updateBag={updateBag}\r\n                />\r\n                <SearchBar \r\n                    setFilterPokemon={this.filterPokemon}\r\n                />\r\n                        \r\n                <select name=\"types\" value={this.state.typeFilter} onChange={(event) => this.setState({ typeFilter:event.target.value })}>\r\n                    <option value=\"\">sort pokemon by primary type</option>\r\n                    {pokemonType.map(type => <option key={ type } value={type.toLowerCase()}>{type}</option>)}\r\n                </select>  \r\n                \r\n                <label htmlFor = \"points\">\r\n                    Base Value\r\n                </label>  \r\n                <input\r\n                    type=\"range\" \r\n                    id=\"points\" \r\n                    name=\"points\" \r\n                    min=\"1\" \r\n                    max=\"300\" \r\n                    value = {this.state.maxBaseExperienceFilter} \r\n                    onChange={(event) =>  this.setState({maxBaseExperienceFilter:event.target.value })}\r\n                />                \r\n                \r\n                <div class=\"row\">\r\n                    <PokemonList \r\n                        pokemons={pokemons}\r\n                        nameFilter={this.state.nameFilter}\r\n                        typeFilter={this.state.typeFilter}\r\n                        maxBaseExperienceFilter={this.state.maxBaseExperienceFilter}\r\n                        bag={bag}\r\n                        updateBag={updateBag}\r\n                    />\r\n                </div>\r\n                        \r\n                        \r\n            </div>\r\n            <Sound \r\n                url={palettetown}\r\n                playStatus={Sound.status.PLAYING}\r\n                playFromPosition={300}\r\n                loop={true}\r\n            />            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        pokemons: state.pokemons,\r\n        bag: state.bag,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { fetchPokemons, updateBag }\r\n)(Pokedex);\r\n","export default __webpack_public_path__ + \"static/media/pokecenter_pokedex.fdd99934.mp3\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPokemon, updateBag } from '../actions';\r\n\r\nimport Card from './Card';\r\n\r\nimport Sound from 'react-sound';\r\nimport pokecenter from '../utils/audio/pokecenter_pokedex.mp3';\r\n\r\n\r\nimport \"./PokemonDetails.css\"\r\n\r\nclass PokemonDetails extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchPokemon(this.props.match.params.id)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.props.fetchPokemon(this.props.match.params.id)\r\n    }\r\n\r\n    render() {\r\n        const { pokemon, bag, updateBag } = this.props;\r\n        const pokemonId = this.props.match.params.id;\r\n\r\n        return this.props.pokemon.name ? (\r\n            <div className=\"pokemon-details\">\r\n            <Sound \r\n                url={pokecenter}\r\n                playStatus={Sound.status.PLAYING}\r\n                playFromPosition={300}\r\n                loop={true}\r\n            /> \r\n                <div classname=\"buttondiv\">\r\n                    <button type=\"button\" className=\"backButton  btn btn-outline-dark btn-lg\"><Link className=\"btn-primary-link\" to={\"/pokedex\"}>BACK</Link></button>\r\n                </div>\r\n        \r\n            {pokemonId > 1 && <div classname=\"buttondiv\">\r\n                    <button type=\"button\" className=\"prevButton  btn btn-outline-dark btn-lg\">{pokemonId > 1 && <Link className=\"btn-primary-link\" to={`/pokedex/${pokemonId - 1}`}>PREVIOUS</Link>}</button>\r\n                </div>}\r\n        \r\n\r\n\r\n                <div style={{width: \"20%\"  }}>  \r\n                    <Card\r\n                        pokemon={pokemon}\r\n                        bag={bag}\r\n                        updateBag={updateBag}\r\n                    />                        \r\n                    <p><h5><b>Height:</b></h5> {pokemon.height}</p>\r\n                    <p><h5><b>Weight:</b></h5> {pokemon.weight}</p>\r\n                    <p>\r\n                        <h5><b>Type:</b></h5> \r\n                        {pokemon.types.map((type) => {\r\n                            return type.type.name + ' '\r\n                        })}\r\n                    </p>\r\n                    \r\n                </div>\r\n                \r\n                 {pokemonId < 151 && <div classname=\"buttondiv\">\r\n                    <button type=\"button\" className=\"nextButton  btn btn-outline-dark btn-lg\">{pokemonId < 151 && <Link className=\"btn-primary-link\" to={`/pokedex/${parseInt(pokemonId) + 1}`}>NEXT</Link>}</button>\r\n                </div> }\r\n\r\n            </div>\r\n           \r\n        ) : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        pokemon: state.pokemon,\r\n        bag: state.bag,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchPokemon, updateBag }\r\n)(PokemonDetails);","import React from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\n\r\nimport \"./battle-card.css\"\r\n\r\nconst BattleCard = ({ pokemon, currentHealth, totalHealth = 100, attack, reverse }) => {\r\n    const attackHandler = (move) => {\r\n        attack(move)\r\n    }\r\n\r\n    const health = currentHealth/totalHealth * 100\r\n\r\n    return (\r\n        <div className=\"battle-card\" style={{flexDirection: reverse ? \"row-reverse\" : \"\"}}>\r\n            <div style={{display: \"flex\", flexDirection: \"column\", gap: \"10px\"}}>\r\n                {reverse && pokemon.moves.slice(0, 4).map(\r\n                    (move) => <button key={move.move.name} onClick={() => attackHandler(move.move)} className=\"btn btn-primary\">{move.move.name.toUpperCase()}</button>\r\n                )}\r\n            </div>\r\n            <div>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                    <div>{ pokemon.name.toUpperCase() }</div>\r\n                    <img src={reverse ? pokemon.sprites.back_default : pokemon.sprites.front_default } alt={ pokemon.name } />\r\n                    <div>HEALTH: { currentHealth }/{ totalHealth }</div>\r\n                </div>\r\n                <ProgressBar now={health} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default BattleCard;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPokemon, fetchOpponentBag } from '../actions';\r\nimport pokeapi from '../apis/pokeapi';\r\nimport BattleCard from './BattleCard';\r\nimport { Container, Modal, Button } from 'react-bootstrap';\r\n\r\nimport \"./battle.css\"\r\n\r\nclass Battle extends Component {\r\n    state = {\r\n        // user state\r\n        activePokemonIndex: 0,\r\n        userHealth: [80, 100, 100],\r\n        userMaxHealth: [80, 100, 100],\r\n\r\n        // opponent state\r\n        activeOpponentPokemonIndex: 0,\r\n        opponentHealth: [100, 100, 100, 100],\r\n        opponentMaxHealth: [100, 100, 100, 100],\r\n\r\n        isModalOpen: false,\r\n        modalTitle: \"Modal Title\",\r\n        modalText: \"This is modal text\",\r\n\r\n        opponentCanAttack: true,\r\n        isGameOver: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        let opponentBagSize = 1\r\n        const min = Math.ceil(this.props.bag.length - 1);\r\n        let max = Math.floor(this.props.bag.length + 2);\r\n\r\n        if (this.props.bag.length > 1) {\r\n            if (this.props.bag.length > 5) {\r\n                max = 1\r\n            }\r\n            \r\n            opponentBagSize = Math.floor(Math.random() * (max - min) + min);\r\n        }\r\n\r\n        const opponentBagArray = []\r\n\r\n        for (let i = 0; i < opponentBagSize; i++) {\r\n            opponentBagArray[i] = Math.floor(Math.random() * (152 - 1) + 1);\r\n        }\r\n        \r\n        this.props.fetchOpponentBag(opponentBagArray)\r\n    }\r\n\r\n    render() {\r\n        const { bag, opponentBag } = this.props;\r\n        const {\r\n            activePokemonIndex,\r\n            userHealth,\r\n            userMaxHealth,\r\n            activeOpponentPokemonIndex,\r\n            opponentHealth,\r\n            opponentMaxHealth,\r\n            isModalOpen,\r\n            modalTitle,\r\n            modalText,\r\n            isGameOver,\r\n            opponentCanAttack,\r\n        } = this.state;\r\n        const pokemon = bag[activePokemonIndex];\r\n        const opponentPokemon = opponentBag[this.state.activeOpponentPokemonIndex];\r\n        \r\n        const getData = async (url) => {\r\n            const res = await pokeapi.get(url);\r\n            return await res.data;\r\n         }\r\n\r\n        //Attack button script\r\n        const userAttack = (move) => {\r\n            const userMove  = move.name\r\n\r\n            this.setState({ \r\n                opponentCanAttack: true\r\n            })\r\n\r\n            getData(move.url)\r\n                .then(data => {\r\n                    let newOpponentHealthArray = opponentHealth\r\n                    newOpponentHealthArray[activeOpponentPokemonIndex] = newOpponentHealthArray[activeOpponentPokemonIndex] - data.power\r\n                    this.setState({\r\n                        opponentHealth: newOpponentHealthArray,\r\n                        isModalOpen: true,\r\n                        modalTitle: \"User Attack\",\r\n                        modalText: `You used ${userMove} and did ${data.power} damage`,\r\n                    })\r\n\r\n                    if (opponentHealth[activeOpponentPokemonIndex] <= 0) {\r\n                        const nextIndex = activeOpponentPokemonIndex + 1;\r\n                        this.setState({ \r\n                            activeOpponentPokemonIndex: nextIndex,\r\n                            opponentCanAttack: false\r\n                        })\r\n                        if (activeOpponentPokemonIndex >= opponentBag.length - 1) {\r\n                            this.setState({ \r\n                                activeOpponentPokemonIndex: 0,\r\n                                isModalOpen: true,\r\n                                modalTitle: \"Congrats\",\r\n                                modalText: \"Your opponent has no pokemon left. You Win!\",\r\n                                isGameOver: true,\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n\r\n        const opponentAttack = () => {\r\n            const moveIndex = Math.floor(Math.random() * opponentPokemon.moves.length)\r\n            const attackMove = opponentPokemon.moves[moveIndex].move\r\n            const userMove  = attackMove.name\r\n\r\n            getData(attackMove.url)\r\n                .then(data => {\r\n                if (opponentCanAttack) {\r\n                    let newHealthArray = userHealth\r\n                    newHealthArray[activePokemonIndex] = newHealthArray[activePokemonIndex] - data.power\r\n                    this.setState({\r\n                        userHealth: newHealthArray,\r\n                        isModalOpen: true,\r\n                        modalTitle: \"Opponent Attack\",\r\n                        modalText: `Your opponent used ${userMove} and did ${data.power} damage`,\r\n                        opponentCanAttack: false,\r\n                    })\r\n                    \r\n                    if (userHealth[activePokemonIndex] <= 0) {\r\n                        this.setState({ \r\n                            activePokemonIndex: activePokemonIndex + 1,\r\n                        })\r\n                        if (activePokemonIndex >= bag.length - 1) {\r\n                            this.setState({ \r\n                                activePokemonIndex: 0,\r\n                                isModalOpen: true,\r\n                                modalTitle: \"Sorry\",\r\n                                modalText: \"You have no pokemon left. You Lose!\",\r\n                                isGameOver: true,\r\n                            })\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.setState({ \r\n                        isModalOpen: false,\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n\r\n        return pokemon && opponentPokemon ? (\r\n            <div className=\"battle\">\r\n                <Container>\r\n                    <div classname=\"buttondiv\">\r\n                    <button type=\"button\" className=\"backButton  btn btn-primary btn-lg\"><Link className=\"btn-primary-link\" to={\"/pokedex\"}>BACK</Link></button>\r\n                    </div>\r\n                    <BattleCard pokemon={opponentPokemon} currentHealth={opponentHealth[activeOpponentPokemonIndex]} totalHealth={opponentMaxHealth[activeOpponentPokemonIndex]} />\r\n                    <BattleCard pokemon={pokemon} currentHealth={userHealth[activePokemonIndex]} totalHealth={userMaxHealth[activePokemonIndex]} attack={userAttack} reverse />\r\n                    \r\n                    {isModalOpen && <div className=\"modal-wrapper\">\r\n                        <Modal.Dialog className=\"modal-dialog\">\r\n                            <Modal.Body className=\"modal-body\">\r\n                                <Modal.Title className=\"modal-title\">{modalTitle}</Modal.Title>\r\n                                <p style={{alignSelf: \"center\"}}>{modalText}</p>\r\n                                {!isGameOver ?\r\n                                    <Button onClick={() => opponentAttack()} variant=\"primary\">Continue</Button> \r\n                                    : <button type=\"button\" className=\"btn btn-outline-primary\"><Link to={\"/pokedex\"}>Continue</Link></button>\r\n                                }\r\n                            </Modal.Body>\r\n                        </Modal.Dialog>\r\n                    </div>}\r\n                </Container>\r\n            </div>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        pokemons: state.pokemons,\r\n        bag: state.bag,\r\n        opponentBag: state.opponentBag,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { fetchPokemon, fetchOpponentBag }\r\n)(Battle);\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Pokedex from './components/Pokedex';\r\nimport PokemonDetails from './components/PokemonDetails';\r\nimport Battle from './components/Battle';\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Route path=\"/pokedex/:id\" exact component={ PokemonDetails } />\r\n            <Route path=\"/pokedex\" exact component={ Pokedex } />\r\n            <Route path=\"/battle\" exact component={ Battle } />\r\n            <Route path=\"/\" exact component={ Home } />\r\n        </BrowserRouter>\r\n    )\r\n};\r\n\r\nexport default App;\r\n        ","import { combineReducers } from 'redux';\r\nimport pokemonListReducer from './pokemonListReducer';\r\nimport pokemonReducer from './pokemonReducer';\r\nimport bagReducer from './bagReducer';\r\nimport opponentBagReducer from './opponentBagReducer';\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    pokemons: pokemonListReducer,\r\n    pokemon: pokemonReducer,\r\n    bag: bagReducer,\r\n    opponentBag: opponentBagReducer,\r\n});\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nexport default (state = [], action) => {\r\n    switch(action.type) {\r\n        case actionTypes.FETCH_POKEMONS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\n\r\nexport default (state = [], action) => {\r\n    switch(action.type) {\r\n        case actionTypes.FETCH_POKEMON:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\n\r\nexport default (state = [], action) => {\r\n    switch(action.type) {\r\n        case actionTypes.UPDATE_BAG:\r\n            return !state.includes(action.payload) ? [...state, action.payload]\r\n            : state.filter((id) => id !== action.payload)\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\n\r\nexport default (state = [], action) => {\r\n    switch(action.type) {\r\n        case actionTypes.FETCH_OPPONENT_BAG:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}